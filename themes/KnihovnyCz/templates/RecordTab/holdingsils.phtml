<?php
    // Set up convenience variables:
    $account = $this->auth()->getManager();
    $user = $account->isLoggedIn();
    $source = $this->driver->getSourceId();
    $offlineMode = $this->ils()->getOfflineMode();
    $holdings = $this->driver->getOfflineHoldings();
    $filters = $holdings['filters'] ?? [];
    // Set page title.
    $this->headTitle($this->translate('Holdings') . ': ' . $this->driver->getBreadcrumb());

    $recordIdJson = json_encode($this->driver->getUniqueID(), JSON_HEX_QUOT);
    $isCaslin = (int)str_starts_with($this->driver->getUniqueID(), 'caslin');
    $loadJs = <<<JS
  const statusUnknownHtml = '<span class="label label-default">' + VuFind.translate('status_unknown_message') + '</span>';
  const isCaslin = $isCaslin;
  function updateHoldingsTable() {
    $('.status-loader').remove();
    ['availability', 'request','collection_desc', 'callnumber_second', 'description', 'callnumber'].forEach(function hideTableColumn(column) {
      if ($('td[data-type="' + column + '"]').text().trim() === '') {
        $('th[data-type="' + column + '"], td[data-type="' + column + '"]').hide();
      }
    });
    $('td[data-type="status"]').each(function removeEmpty() {
      if ($(this).text().trim() === '') {
        $(this).html(statusUnknownHtml);
      }
    });
  }
  var _ajaxStatus = function _ajaxStatus(id) {
    $.ajax({
      url: VuFind.path + '/AJAX/JSON?method=getHolding',
      method: 'POST',
      data: {'id': id },
      dataType: 'json',
    })
      .done(function ajaxLookupDone(response) {
        var holds = $("table[id='holding_items']");
        response.data.holding.forEach(function (item) {
          var elm = null;
          if (item.item_id) {
            elm = holds.find('tr[data-item-id="' + item.item_id + '"]');
          } else if (item.number) {
            elm = holds.find('tr[data-copy-number="' + item.number + '"]');
          } else {
            return;
          }
          if (item.hasOwnProperty('availability_status') && item.availability_status) {
            elm.find('td[data-type="availability"] > div').text(item.availability_status);
          }

          if (item.hasOwnProperty('status') && item.status) {
            if (item.label !== '') {
              elm.find('td[data-type="status"]').html(
                '<span class="status label label-' + item.label + '">'
                + htmlEncode(item.status) + '</span>'
              );
            } else {
              elm.find('td[data-type="status"]').html(
                '<span class="status">' + htmlEncode(item.status) + '</span>'
              );
            }
            if (item.hasOwnProperty('duedate') && item.duedate ) {
              elm.find('td[data-type="status"]').append(
                ' ' + VuFind.translate('Due') + ' ' + htmlEncode(item.duedate)
              );
            }
          } else {
            elm.find('td[data-type="status"]').html(statusUnknownHtml);
          }

          if (item.hasOwnProperty('location') && item.location) {
            elm.find('td[data-type="location"]').text(item.location);
          }
          if (item.hasOwnProperty('collection_desc') && item.collection_desc) {
            elm.find('td[data-type="collection_desc"]').text(item.collection_desc);
          }
          if (item.hasOwnProperty('callnumber_second') && item.callnumber_second ) {
            elm.find('td[data-type="callnumber_second"]').text(item.callnumber_second);
          }
          if (item.hasOwnProperty('description') && item.description) {
            elm.find('td[data-type="description"]').text(item.description);
          }
          if (item.hasOwnProperty('callnumber') && item.callnumber) {
            elm.find('td[data-type="callnumber"]').text(item.callnumber);
          }
          if (item.link) {
            elm.find('td[data-type="request"]')
              .html('<a href="' + item.link + '">' + VuFind.translate('Place a Hold') + '</a>');
          }
          const possiblyDuplicateData = [
            { primary: 'callnumber', secondary: 'callnumber_second' },
            { primary: 'location', secondary: 'collection_desc' }
          ];
          possiblyDuplicateData.forEach(function removeDuplicates(columns) {
            if (elm.find('td[data-type="' + columns.primary + '"]').text().trim()
              === elm.find('td[data-type="' + columns.secondary + '"]').text().trim()
            ) {
                elm.find('td[data-type="' + columns.secondary + '"]').text('');
            }
          });
        });
        updateHoldingsTable();
      })
      .fail(function ajaxLookupFail() {
        $('#holding_items').find('td[data-type="status"]').html(statusUnknownHtml);
        updateHoldingsTable();
      });
  };
  if (isCaslin) {
    updateHoldingsTable();
  } else {
    _ajaxStatus({$recordIdJson});
  }

  var _filterHoldings = function _filterHoldings(key, value) {
    var rows = $('#holding_items>tbody>tr');
    rows.each(function filterRow() {
      var show = (value == 'ALL') || $(this).data(key) == value;
      (show)? $(this).show() : $(this).hide();
    });
  };

  $('select.holding_filter').each(function addListener() {
    $(this).on('change', function onChange() {
      var key = $(this).attr('name');
      $('select.holding_filter').each(function switchOtherSelect() {
        if ($(this).attr('name') !== key) {
          $(this).val('ALL');
        }
      });
      var value = $(this).find(":selected").attr('value');
      _filterHoldings(key, value);
    });
  });

JS;

?>

<?=$this->context($this)->renderInContext('librarycards/selectcard.phtml', ['user' => $this->auth()->isLoggedIn()]); ?>

<?php if (!empty($holdings['blocks'])):?>
  <div id="account-block-msg" class="alert alert-danger">
    <?=$this->transEsc('account_block_options_missing', ['%%details%%' => implode('; ', $holdings['blocks'])]) ?>
  </div>
<?php endif; ?>

<?=($offlineMode == "ils-offline") ? $this->render('Helpers/ils-offline.phtml', ['offlineModeMsg' => 'ils_offline_holdings_message']) : ''?>

<?php if (($this->ils()->getHoldsMode() == 'driver' && !empty($holdings['holdings'])) || $this->ils()->getTitleHoldsMode() == 'driver'): ?>
    <?php if ($account->loginEnabled() && $offlineMode != 'ils-offline'): ?>
        <?php if (!$user): ?>
      <div class="alert alert-info">
        <a href="<?=$this->escapeHtmlAttr($this->recordLinker()->getTabUrl($this->driver, 'Holdings', ['login' => 'true', 'catalogLogin' => 'true']))?>" data-lightbox><?=$this->transEsc("hold_login")?></a>
      </div>
        <?php elseif (!$user->cat_username): ?>
      <div class="alert alert-info">
        <?=$this->translate("hold_profile_html", ['%%url%%' => $this->escapeHtmlAttr($this->recordLinker()->getTabUrl($this->driver, 'Holdings', ['catalogLogin' => 'true']))])?>
      </div>
        <?php endif; ?>
    <?php endif; ?>
<?php endif; ?>
<?php $holdingTitleHold = $this->driver->tryMethod('getRealTimeTitleHold'); if (!empty($holdingTitleHold)): ?>
  <a class="placehold" data-lightbox title="<?=$this->transEsc('request_place_text')?>" href="<?=$this->escapeHtmlAttr($this->recordLinker()->getRequestUrl($holdingTitleHold))?>"><i class="fa fa-flag" aria-hidden="true"></i>&nbsp;<?=$this->transEsc('title_hold_place')?></a>
<?php endif; ?>

<?php if (!empty($holdings['electronic_holdings'])): ?>
  <?=
    $this->context($this)->renderInContext(
        'RecordTab/holdingsils/electronic.phtml',
        ['holdings' => $holdings['electronic_holdings']]
    );
  ?>
<?php endif; ?>


<?php foreach($filters as $filter => $values): if (!empty($values)): ?>
  <div class="col-md-5">
    <label for="<?=$this->escapeHtml($filter)?>"><?=$this->transEsc($filter . '_filter')?>: </label>
    <select name="<?=$this->escapeHtml($filter)?>" class='holding_filter'>
      <option value="ALL"><?=$this->transEsc('All')?></option>
      <?php foreach ($values as $key => $value): ?>
        <option value="<?=$this->escapeHtml($key)?>">
          <?php if(!empty($key)):?>
            <?=$this->escapeHtml($key)?>
          <?php else:?>
            <?=$this->transEsc('no_filter_value')?>
          <?php endif;?>
        </option>
      <?php endforeach; ?>
    </select>
  </div>
<?php endif; endforeach; ?>

<?php if (!empty($holdings['holdings'] ?? [])): ?>
  <table class="table table-striped responsive-table" id="holding_items">
    <thead>
      <tr>
        <th data-type="availability"><?=$this->transEsc("Availability")?></th>
        <th data-type="status"><?=$this->transEsc("Status")?></th>
        <th data-type="request"></th>
        <th data-type="location"><?=$this->transEsc("Department")?></th>
        <th data-type="collection_desc"><?=$this->transEsc("Collection")?></th>
        <th data-type="callnumber_second"><?=$this->transEsc("Location")?></th>
        <th data-type="description"><?=$this->transEsc("Description")?></th>
        <th data-type="callnumber"><?=$this->transEsc("callnumber_abbrev")?></th>
      </tr>
    </thead>
    <tbody>
      <?php foreach ($holdings['holdings'] ?? [] as $holding): ?>
        <?php foreach ($holding['items'] as $row): ?>
          <?php
            echo $this->context($this)->renderInContext(
              'RecordTab/holdingsils/' . $this->tab->getTemplate() . '.phtml',
              ['holding' => $row, 'source' => $source]
            );
          ?>
        <?php endforeach; ?>
      <?php endforeach; ?>
    </tbody>
  </table>
<?php endif; ?>

<?=$this->inlineScript(\Laminas\View\Helper\HeadScript::SCRIPT, $loadJs, 'SET')?>
<noscript><?=$this->transEsc('Please enable JavaScript.')?></noscript>

<?php if (!empty($holdings['total']) && $paginator = $this->tab->getPaginator($holdings['total'], $holdings['page'], $holdings['itemLimit'])): ?>
    <?=$this->paginationControl($paginator, 'Sliding', 'Helpers/pagination.phtml', ['page' => $holdings['page']])?>
<?php endif; ?>
<?php $history = $this->driver->getRealTimeHistory(); ?>
<?php if (is_array($history) && !empty($history)): ?>
  <h3><?=$this->transEsc("Most Recent Received Issues")?></h3>
  <table class="table table-striped">
    <?php foreach ($history as $row): ?>
      <tr><td><?=$this->escapeHtml($row['issue'])?></td></tr>
    <?php endforeach; ?>
  </table>
<?php endif; ?>
