<?php
  $missingCitation = false;
  $hasCitations = false;
?>
<?=$this->flashmessages()?>

<div id='citation-container'>
  <div id='citation-loader' class="hidden"><?=$this->icon('spinner', 'fa-fw') . $this->translate('loading_ellipsis')?></div>

  <div id='citation-placeholder'>
    <?php foreach($this->citations as $recordId => $citation): ?>
      <?php
        if (empty($citation)) {
          $missingCitation = true;
          $citation = '';
        } else {
          $hasCitations = true;
        }
      ?>
      <div class='citation' data-record-id='<?=$this->escapeHtml($recordId);?>' data-record-source="<?=$this->source?>">
        <?=$citation?>
      </div>
    <?php endforeach; ?>
  </div>

</div>

<div id='missing-citations' class="<?='alert alert-warning' . (($missingCitation == false || !$hasCitations) ? ' hidden' : '')?>">
  <?=$this->transEsc('Some citations are not available') ?>
</div>

<div id='no-citations' class="<?='alert alert-warning' . (($hasCitations == true) ? ' hidden' : '')?>">
  <?=$this->transEsc('No citations available') ?>
</div>

<?php if (!empty($citationStyles)) :?>
  <div id='citation-style-selector'>
    <select class='style'>
      <?php foreach($citationStyles as $style => $description): ?>
        <option value='<?=$style?>'<?=($style == $this->currentStyle) ? 'selected="selected"' : ''?>><?=$description?></option>
      <?php endforeach; ?>
    </select>
    <?php if(isset($citationLink)): ?>
      <a id="citace-pro" href="<?=$citationLink?>" target="_blank">
        <img src="/themes/KnihovnyCz/images/logoCitacePROkatalog.png" alt="Citace PRO">
      </a>
    <?php endif; ?>
  </div>
<?php endif; ?>

<?php
    $script = <<<JS
          function selectText(element) {
            var range, selection;
            if (window.getSelection) {
              selection = window.getSelection();
              range = document.createRange();
              range.selectNodeContents(element);
              selection.removeAllRanges();
              selection.addRange(range);
            } else if (document.body.createTextRange) {
              range = document.body.createTextRange();
              range.moveToElementText(element);
              range.select();
            }
          }

          function updateCitation(citations) {
            const citationPlaceholder = $('#citation-placeholder');
            citationPlaceholder.html('');
            let missingCitation = false;
            let hasCitations = false;
            $.each(citations, function onEachLink(index, citation) {
              const citationEl = $('<div>', {
                'class': 'citation',
                'data-record-id': citation.id,
                'data-record-source': citation.source,
                'html': citation.content
              });
              if (citation.content == false) {
                missingCitation = true;
              } else {
                hasCitations = true;
              }
              citationPlaceholder.append(citationEl);
            });
            if (missingCitation && hasCitations) {
              $('#missing-citations').removeClass('hidden');
            }
            if (!hasCitations) {
              $('#no-citations').removeClass('hidden');
            }
            citationPlaceholder.removeClass('hidden');
            $('.citation').click(function selectCitation() {
                selectText(this);
            });
            $('#citation-loader').addClass('hidden');
          }

          function getCitation( recordIds, citationStyle, recordSource) {
            $.ajax({
              dataType: 'json',
              async: true,
              type: 'POST',
              url: '/AJAX/JSON?method=getCitations',
              data: { recordIds: recordIds, citationStyle: citationStyle, recordSource: recordSource },
              success: function citationSuccessHandler(result) {
                updateCitation(result.data);
              },
              fail: function citationFailHandler(jqXHR, textStatus) {
                console.log( "Request failed: " + textStatus );
              }
            });
          }

          $(document).ready(function citationForm() {
            $('#citace-pro').off('click');
            $('.citation').click(function selectCitation() {
              selectText(this);
            });
            $('#citation-style-selector').change(function citationChangeHandler(event) {
              var style = event.target.value;
              $('#citation-placeholder').addClass('hidden');
              $('#missing-citations').addClass('hidden');
              $('#no-citations').addClass('hidden');
              $('#citation-loader').removeClass('hidden');
              const recordIds = $.map($('#citation-placeholder')
                .children('.citation'), function getRecordId(it) {return $(it).data('record-id')});
              const recordSource = $('#citation-placeholder').children('.citation').first().data('record-source');
              getCitation(recordIds,  style, recordSource);
            });
          });
        JS;
    echo $this->inlineScript(\Laminas\View\Helper\HeadScript::SCRIPT, $script, 'SET');
?>
<br>
<?=$this->copyToClipboardButton('#citation-placeholder');?>
