include:
  - project: 'Knihovny.cz/ci-templates'
    ref: main
    file: '/vufind/.gitlab-ci.yml'

variables:
  BUILD_DEBUG: 'true'

Test the code:
  stage: test
  image: ${CACHE_REGISTRY_URL}/mirrors/alpine:latest
  rules:
    - if: # run tests on the default branch
        ( $CI_PIPELINE_SOURCE == "push" )  &&
        ( $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH )
    - if: # run tests on MR
        ( $CI_PIPELINE_SOURCE == "merge_request_event" )
    - if: # run tests on version tag
        ( $CI_PIPELINE_SOURCE == "push" )  &&
        ( $CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+/ )
  script:
    - echo "Add your tests here, please"

.on_merge_request:
  variables:
    CONTAINER_IMAGE_TAG: 'mr-${CI_MERGE_REQUEST_IID}'
  rules:
    - if: # build and run on issue or feat branches
        ( $CI_PIPELINE_SOURCE == "merge_request_event" ) &&
        ( $CI_MERGE_REQUEST_EVENT_TYPE == "detached" ) &&
        ( ( $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^issue/ ) ||
        ( $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feat-/ ) ||
        ( $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feat\// ) ||
        ( $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^fix\// )
        )

.on_release:
  variables:
    CONTAINER_IMAGE_TAG: 'tag-${CI_COMMIT_TAG}'
  rules:
    - if: # build on version tag
        ( $CI_PIPELINE_SOURCE == "push" )  &&
        ( $CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+/  ) &&
        ( $CI_JOB_STAGE != "deploy" )
      when: always
    - if: # deploy on version tag with confirmation
        ( $CI_PIPELINE_SOURCE == "push" )  &&
        ( $CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+/  ) &&
        ( $CI_JOB_STAGE == "deploy" )
      when: manual

.on_devel_branch:
  variables:
    CONTAINER_IMAGE_TAG: 'branch-${CI_COMMIT_BRANCH}'
  rules:
    - if: # build on the default branch
        ( $CI_PIPELINE_SOURCE == "push" ) &&
        ( $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ) &&
        ( $CI_JOB_STAGE != "build" )
      when: always
    - if: # deploy on the default branch with confirmation
        ( $CI_PIPELINE_SOURCE == "push" ) &&
        ( $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ) &&
        ( $CI_JOB_STAGE == "deploy" )
      when: manual

Build MR image:
  extends:
    - .build_image
    - .on_merge_request

Deploy MR image:
  extends:
   - .deploy_image
   - .on_merge_request
  needs:
    - Build MR image
  dependencies:
    - Build MR image
  variables:
    DEPLOY_REPO_BRANCH: devel
    DEPLOY_REPO_DIR: devel
  environment:
    name: devel
    url: $DEVEL_ENVIRONMENT_URL

Build release image:
  extends:
    - .build_image
    - .on_release

Build devel image:
  extends:
  - .build_image
  - .on_devel_branch

Deploy devel image:
  extends:
    - .deploy_image
    - .on_devel_branch
  allow_failure: true # this is optional
  environment:
    name: devel
    url: $DEVEL_ENVIRONMENT_URL

.deploy_release_image:
  extends: .deploy_image
  variables:
    DEPLOY_REPO_BRANCH: main
    DEPLOY_REPO_DIR: production
  dependencies:
    - Build release image
  needs:
    - Build release image

Deploy release image:
  extends: .deploy_release_image
  variables:
    DEPLOY_REPO_DIR: production
  environment:
    name: production
    url: $PRODUCTION_ENVIRONMENT_URL

Deploy tech image:
  extends: .deploy_release_image
  variables:
    DEPLOY_REPO_DIR: tech
  environment:
    name: tech
    url: $TECH_ENVIRONMENT_URL

Deploy irel image:
  extends: .deploy_release_image
  variables:
    DEPLOY_REPO_DIR: irel
  environment:
    name: irel
    url: $IREL_ENVIRONMENT_URL

Deploy kiv image:
  extends: .deploy_release_image
  variables:
    DEPLOY_REPO_DIR: kiv
  environment:
    name: kiv
    url: $KIV_ENVIRONMENT_URL

Deploy mus image:
  extends: .deploy_release_image
  variables:
    DEPLOY_REPO_DIR: mus
  environment:
    name: mus
    url: $MUS_ENVIRONMENT_URL

Deploy mzk image:
  extends: .deploy_release_image
  variables:
    DEPLOY_REPO_BRANCH: devel
    DEPLOY_REPO_DIR: mzk
  environment:
    name: mzk
    url: $MZK_ENVIRONMENT_URL

Deploy geo image:
  extends: .deploy_image
  variables:
    DEPLOY_REPO_DIR: geo
  environment:
    name: geo
    url: $GEO_ENVIRONMENT_URL

